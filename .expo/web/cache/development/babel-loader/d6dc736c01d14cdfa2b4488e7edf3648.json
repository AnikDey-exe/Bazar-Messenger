{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _firebase = _interopRequireDefault(require(\"firebase\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _reactNativeGiftedChat = require(\"react-native-gifted-chat\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\manas\\\\ChatApp\\\\screens\\\\ConverseScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar customFonts = {\n  \"Raleway\": require(\"../assets/Raleway-Regular.ttf\"),\n  \"Raleway-Bold\": require(\"../assets/Raleway-Bold.ttf\"),\n  \"Raleway-Thin\": require(\"../assets/Raleway-Thin.ttf\")\n};\n\nvar ConverseScreen = function (_React$Component) {\n  (0, _inherits2.default)(ConverseScreen, _React$Component);\n\n  var _super = _createSuper(ConverseScreen);\n\n  function ConverseScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ConverseScreen);\n    _this = _super.call(this, props);\n\n    _this.getMessages = function () {\n      _this.requestRef = _config.default.collection('Messages').orderBy(\"date\", \"asc\").onSnapshot(function (snapshot) {\n        var messages = [];\n        snapshot.docs.map(function (doc) {\n          var message = doc.data();\n          message['doc_id'] = doc.id;\n          messages.push(message);\n        });\n        var allMessages = messages.filter(function (msg) {\n          return msg.messageId == _this.state.conversationId;\n        });\n\n        _this.setState({\n          allMessages: allMessages\n        });\n      });\n    };\n\n    _this.addMessage = function (message) {\n      _config.default.collection('Messages').add({\n        \"message\": message,\n        \"messageId\": _this.state.conversationId,\n        \"author\": _this.state.userId,\n        \"date\": _firebase.default.firestore.Timestamp.now().toDate()\n      });\n\n      console.log(_this.state.allMessages);\n      var messageToUpdate = _this.state.message;\n\n      _config.default.collection('Conversations').where('conversationId', '==', _this.state.conversationId).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _config.default.collection('Conversations').doc(doc.id).update({\n            'lastMessage': messageToUpdate,\n            'lastMessageDate': _firebase.default.firestore.Timestamp.now().toDate()\n          });\n        });\n      });\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n\n      if (item.author === _this.state.userId) {\n        if (_this.state.width > _this.state.percent) {\n          return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n            key: index,\n            style: styles.container3,\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }\n          }, \" \", item.message)));\n        } else {\n          return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n            key: index,\n            style: styles.container4,\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 12\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: {\n              color: 'white'\n            },\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }\n          }, \" \", item.message)));\n        }\n      } else {\n        if (_this.state.width > _this.state.percent) {\n          return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n            key: index,\n            style: styles.container,\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: {\n              color: 'black'\n            },\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }\n          }, \" \", item.message)));\n        } else {\n          return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n            key: index,\n            style: styles.container2,\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 11\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: {\n              color: 'black'\n            },\n            __self: (0, _assertThisInitialized2.default)(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 13\n            }\n          }, \" \", item.message)));\n        }\n      }\n    };\n\n    _this.state = {\n      userId: _firebase.default.auth().currentUser.email,\n      name: _this.props.navigation.getParam('details')[\"name\"],\n      image: _this.props.navigation.getParam('details')[\"image\"],\n      lastMessage: _this.props.navigation.getParam('details')[\"lastMessage\"],\n      lastMessageDate: _this.props.navigation.getParam('details')[\"lastMessageDate\"],\n      conversationId: _this.props.navigation.getParam('details')[\"conversationId\"],\n      targetedUserId: _this.props.navigation.getParam('details')[\"targetedUserId\"],\n      targetedUserId2: _this.props.navigation.getParam('details')[\"targetedUserId\"],\n      allMessages: [],\n      profilePicture: '',\n      width: 0,\n      percent: 0,\n      message: '',\n      fontsLoaded: false\n    };\n    _this.requestRef = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(ConverseScreen, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regenerator.default.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions() {\n      var width = _reactNative.Dimensions.get('window').width / 1.6666667;\n      this.setState({\n        percent: width\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMessages();\n      this.getDimensions();\n\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.requestRef();\n    }\n  }, {\n    key: \"findDimensions\",\n    value: function findDimensions(layout) {\n      var x = layout.x,\n          y = layout.y,\n          width = layout.width,\n          height = layout.height;\n      console.log(width);\n      this.setState({\n        width: width\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeElements.Header, {\n        containerStyle: {\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        leftComponent: _react.default.createElement(_reactNativeElements.Icon, {\n          name: \"arrow-left\",\n          type: \"feather\",\n          color: \"white\",\n          onPress: function onPress() {\n            return _this2.props.navigation.goBack();\n          },\n          style: {\n            paddingTop: 2.5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }\n        }),\n        centerComponent: {\n          text: this.state.name,\n          style: {\n            color: 'white',\n            fontSize: 20,\n            paddingTop: 0,\n            alignSelf: 'center'\n          }\n        },\n        rightComponent: _react.default.createElement(_reactNativeElements.Avatar, {\n          rounded: true,\n          source: {\n            uri: this.state.image\n          },\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }\n        }),\n        backgroundColor: \"#f75a4f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.FlatList, {\n        containerStyle: {\n          backgroundColor: 'rgba(255, 255, 255, 0.0)'\n        },\n        keyExtractor: this.keyExtractor,\n        data: this.state.allMessages,\n        renderItem: this.renderItem,\n        inverted: true,\n        contentContainerStyle: {\n          flexDirection: 'column-reverse',\n          bottom: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n        behavior: \"padding\",\n        enabled: true,\n        style: {\n          position: 'absolute',\n          bottom: 20,\n          flex: 1,\n          flexDirection: 'row',\n          width: '100%',\n          borderTopWidth: 0.25,\n          padding: 5,\n          borderTopColor: '#d4d4d4',\n          paddingLeft: 10,\n          paddingRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        placeholder: \"Type a message\",\n        style: {\n          borderWidth: 0.5,\n          width: '88.5%',\n          height: 40,\n          paddingLeft: 10,\n          borderRadius: 20,\n          borderColor: '#d4d4d4',\n          marginTop: 10\n        },\n        placeholderTextColor: \"black\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            message: text\n          });\n        },\n        value: this.state.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          borderWidth: 0.5,\n          width: '11.5%',\n          height: 40,\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: 50,\n          backgroundColor: '#f75a4f',\n          borderColor: '#f75a4f',\n          marginLeft: 2.5,\n          marginTop: 10\n        },\n        onPress: function onPress() {\n          _this2.addMessage(_this2.state.message);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"arrow-right\",\n        type: \"feather\",\n        color: \"white\",\n        onPress: function onPress() {\n          _this2.addMessage(_this2.state.message);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n  return ConverseScreen;\n}(_react.default.Component);\n\nexports.default = ConverseScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignSelf: \"flex-start\",\n    backgroundColor: '#ecf0f1',\n    padding: 12,\n    borderRadius: 25,\n    marginRight: 10,\n    paddingRight: 10,\n    marginTop: 5,\n    width: '61%'\n  },\n  container2: {\n    flexDirection: \"row\",\n    alignSelf: \"flex-start\",\n    backgroundColor: '#dadce0',\n    padding: 12,\n    borderRadius: 25,\n    marginLeft: 10,\n    paddingRight: 12,\n    marginTop: 5,\n    marginRight: 5\n  },\n  container3: {\n    flexDirection: 'row',\n    backgroundColor: '#1982fc',\n    padding: 12,\n    alignSelf: 'flex-end',\n    borderRadius: 25,\n    marginRight: 10,\n    paddingRight: 12,\n    marginTop: 5,\n    width: '61%'\n  },\n  container4: {\n    flexDirection: 'row',\n    backgroundColor: '#1982fc',\n    padding: 12,\n    alignSelf: 'flex-end',\n    borderRadius: 25,\n    marginRight: 10,\n    paddingRight: 12,\n    marginTop: 5,\n    marginLeft: 10\n  },\n  container5: {\n    flexDirection: 'row',\n    backgroundColor: '#1982fc',\n    padding: 12,\n    alignSelf: 'flex-end',\n    borderRadius: 25,\n    marginRight: 10,\n    paddingRight: 10,\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/manas/ChatApp/screens/ConverseScreen.js"],"names":["customFonts","require","ConverseScreen","props","getMessages","requestRef","db","collection","orderBy","onSnapshot","snapshot","messages","docs","map","doc","message","data","id","push","allMessages","filter","msg","messageId","state","conversationId","setState","addMessage","add","userId","firebase","firestore","Timestamp","now","toDate","console","log","messageToUpdate","where","get","then","querySnapshot","forEach","update","keyExtractor","item","index","toString","renderItem","author","width","percent","styles","container3","container4","color","container","container2","auth","currentUser","email","name","navigation","getParam","image","lastMessage","lastMessageDate","targetedUserId","targetedUserId2","profilePicture","fontsLoaded","Font","loadAsync","Dimensions","getDimensions","_loadFontsAsync","layout","x","y","height","flex","alignItems","justifyContent","goBack","paddingTop","text","style","fontSize","alignSelf","uri","backgroundColor","flexDirection","bottom","position","borderTopWidth","padding","borderTopColor","paddingLeft","paddingRight","borderWidth","borderRadius","borderColor","marginTop","marginLeft","React","Component","StyleSheet","create","marginRight","container5"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Text, FlatList, TouchableOpacity, Image, KeyboardAvoidingView, Dimensions } from 'react-native';\r\nimport { ListItem, SearchBar, Icon, Header } from 'react-native-elements';\r\nimport firebase from 'firebase';\r\nimport db from '../config'\r\nimport { TextInput } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n    \"Raleway\": require(\"../assets/Raleway-Regular.ttf\"),\r\n    \"Raleway-Bold\": require(\"../assets/Raleway-Bold.ttf\"),\r\n    \"Raleway-Thin\": require(\"../assets/Raleway-Thin.ttf\"),\r\n};\r\n\r\nexport default class ConverseScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: firebase.auth().currentUser.email,\r\n      name: this.props.navigation.getParam('details')[\"name\"],\r\n      image: this.props.navigation.getParam('details')[\"image\"],\r\n      lastMessage: this.props.navigation.getParam('details')[\"lastMessage\"],\r\n      lastMessageDate: this.props.navigation.getParam('details')[\"lastMessageDate\"],\r\n      conversationId: this.props.navigation.getParam('details')[\"conversationId\"],\r\n      targetedUserId: this.props.navigation.getParam('details')[\"targetedUserId\"],\r\n      targetedUserId2: this.props.navigation.getParam('details')[\"targetedUserId\"],\r\n      allMessages: [],\r\n      profilePicture: '',\r\n      width: 0,\r\n      percent: 0,\r\n      message: '',\r\n      fontsLoaded: false\r\n    }\r\n    this.requestRef = null\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  getMessages = () => {\r\n    this.requestRef = db.collection('Messages')\r\n      //.where(\"messagePostId\", \"==\", this.state.requestID)\r\n      .orderBy(\"date\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        var messages = [];\r\n        snapshot.docs.map((doc) => {\r\n          var message = doc.data()\r\n          message['doc_id'] = doc.id\r\n          messages.push(message)\r\n        });\r\n\r\n        // console.log(\"all msgs:\", allMessages)\r\n\r\n        var allMessages = messages.filter((msg) => { return msg.messageId == this.state.conversationId })\r\n\r\n        this.setState({\r\n          allMessages: allMessages\r\n        })\r\n      })\r\n  }\r\n\r\n  getDimensions() {\r\n    const width = Dimensions.get('window').width / 1.6666667;\r\n    this.setState({\r\n      percent: width,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMessages();\r\n    this.getDimensions();\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.requestRef();\r\n  }\r\n\r\n  addMessage = (message) => {\r\n    db.collection('Messages').add({\r\n      \"message\": message,\r\n      \"messageId\": this.state.conversationId,\r\n      \"author\": this.state.userId,\r\n      \"date\": firebase.firestore.Timestamp.now().toDate()\r\n    })\r\n\r\n    console.log(this.state.allMessages);\r\n\r\n    var messageToUpdate = this.state.message;\r\n\r\n    db.collection('Conversations')\r\n      .where('conversationId', '==', this.state.conversationId)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          db.collection('Conversations').doc(doc.id).update({ \r\n            'lastMessage': messageToUpdate,\r\n            'lastMessageDate': firebase.firestore.Timestamp.now().toDate()\r\n          })\r\n          // doc.update({\r\n          //   lastMessage: this.state.message,\r\n          //   lastMessageDate: firebase.firestore.Timestamp.now().toDate()\r\n          // })\r\n        });\r\n      })\r\n\r\n    this.setState({\r\n      message: ''\r\n    })\r\n  }\r\n\r\n  findDimensions(layout) {\r\n    const { x, y, width, height } = layout;\r\n\r\n    console.log(width);\r\n    this.setState({\r\n      width: width,\r\n    });\r\n  }\r\n\r\n  keyExtractor = (item, index) => index.toString();\r\n\r\n  renderItem = ({ item, index }) => {\r\n    if (item.author === this.state.userId) {\r\n      if (this.state.width > this.state.percent) {\r\n        return (\r\n          <>\r\n          <View\r\n          //  onLayout={(event) => {\r\n          //   this.findDimensions(event.nativeEvent.layout);\r\n          // }}\r\n          key={index}\r\n          style={styles.container3}>\r\n            <Text> {item.message}</Text>\r\n          </View>\r\n          \r\n            {/* <ListItem\r\n              onLayout={(event) => {\r\n                this.findDimensions(event.nativeEvent.layout);\r\n              }}\r\n              key={index}\r\n              containerStyle={styles.container3}\r\n              title={item.message}\r\n              titleStyle={{ fontSize: 15, color: 'white', alignSelf: 'flex-end' }}\r\n              bottomDivider\r\n            /> */}\r\n          </>)\r\n      }\r\n      else {\r\n        return (\r\n          <>\r\n           <View\r\n            // onLayout={(event) => {\r\n            //   this.findDimensions(event.nativeEvent.layout);\r\n            // }}\r\n          key={index}\r\n          style={styles.container4}>\r\n            <Text style={{color: 'white'}}> {item.message}</Text>\r\n          </View>\r\n            {/* <View style={styles.container4}> */}\r\n            {/* <ListItem\r\n              onLayout={(event) => {\r\n                this.findDimensions(event.nativeEvent.layout);\r\n              }}\r\n              key={index}\r\n              containerStyle={styles.container4}\r\n              title={item.message}\r\n              titleStyle={{ fontSize: 15, color: 'white', alignSelf: 'flex-end' }}\r\n              bottomDivider\r\n            /> */}\r\n          {/* </View> */}\r\n\r\n          </>)\r\n      }\r\n    } else {\r\n      if (this.state.width > this.state.percent) {\r\n        return (\r\n          <>\r\n          <View\r\n            // onLayout={(event) => {\r\n            //   this.findDimensions(event.nativeEvent.layout);\r\n            // }}\r\n          key={index}\r\n          style={styles.container}>\r\n            <Text style={{color: 'black'}}> {item.message}</Text>\r\n          </View>\r\n            {/* <ListItem\r\n              onLayout={(event) => {\r\n                this.findDimensions(event.nativeEvent.layout);\r\n              }}\r\n              key={index}\r\n              // containerStyle={styles.container}\r\n              title={item.message}\r\n              titleStyle={{ fontSize: 15, color: 'black', alignSelf: 'flex-start' }}\r\n              bottomDivider\r\n            /> */}\r\n\r\n\r\n          </>)\r\n      }\r\n      else {\r\n        return (\r\n          <>\r\n          <View\r\n            // onLayout={(event) => {\r\n            //   this.findDimensions(event.nativeEvent.layout);\r\n            // }}\r\n          key={index}\r\n          style={styles.container2}>\r\n            <Text style={{color: 'black'}}> {item.message}</Text>\r\n          </View>\r\n            {/* <ListItem\r\n              onLayout={(event) => {\r\n                this.findDimensions(event.nativeEvent.layout);\r\n              }}\r\n              key={index}\r\n              // containerStyle={styles.container2}\r\n              title={item.message}\r\n              titleStyle={{ fontSize: 15, color: 'black', alignSelf: 'flex-start' }}\r\n              bottomDivider\r\n            /> */}\r\n\r\n\r\n          </>\r\n        )\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <Header\r\n          containerStyle={{ alignItems: 'center', justifyContent: 'center'}}\r\n          leftComponent={\r\n            <Icon\r\n              name=\"arrow-left\"\r\n              type=\"feather\"\r\n              color=\"white\"\r\n              onPress={() => this.props.navigation.goBack()}\r\n              style={{ paddingTop: 2.5 }}\r\n            />\r\n          }\r\n          centerComponent={\r\n\r\n            {\r\n              text: this.state.name,\r\n              style: {\r\n                color: 'white',\r\n                fontSize: 20,\r\n                // fontWeight: 'bold',\r\n                //height: 0,\r\n                paddingTop: 0,\r\n                alignSelf: 'center'\r\n              },\r\n\r\n            }\r\n          }\r\n          rightComponent={\r\n            <Avatar\r\n              rounded\r\n              source={{\r\n                uri: this.state.image\r\n              }}\r\n              size=\"small\"\r\n            //onPress={() => { this.selectPicture() }}\r\n\r\n            />\r\n          }\r\n          backgroundColor=\"#f75a4f\"\r\n        />\r\n\r\n\r\n        <FlatList\r\n          containerStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.0)'}}\r\n          keyExtractor={this.keyExtractor}\r\n          data={this.state.allMessages}\r\n          renderItem={this.renderItem}\r\n          inverted \r\n          contentContainerStyle={{ flexDirection: 'column-reverse', bottom: 80}} />\r\n\r\n\r\n\r\n\r\n        <KeyboardAvoidingView behavior=\"padding\" enabled\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: 20,\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n            width: '100%',\r\n            borderTopWidth: 0.25,\r\n            padding: 5,\r\n            //shadowColor: 'grey',\r\n            //shadowOpacity: 0.7,\r\n            //shadowRadius: 20,\r\n            borderTopColor: '#d4d4d4',\r\n            paddingLeft: 10,\r\n            paddingRight: 10\r\n          }}>\r\n\r\n          <TextInput\r\n            placeholder=\"Type a message\"\r\n            style={{\r\n              borderWidth: 0.5,\r\n              width: '88.5%',\r\n              height: 40,\r\n              paddingLeft: 10,\r\n              borderRadius: 20,\r\n              borderColor: '#d4d4d4',\r\n              marginTop: 10\r\n            }}\r\n            placeholderTextColor=\"black\"\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                message: text\r\n              })\r\n            }}\r\n            value={this.state.message}\r\n          />\r\n\r\n          <TouchableOpacity\r\n            style={{\r\n              //alignSelf: 'end',\r\n              borderWidth: 0.5,\r\n              width: '11.5%',\r\n              height: 40,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderRadius: 50,\r\n              backgroundColor: '#f75a4f',\r\n              borderColor: '#f75a4f',\r\n              marginLeft: 2.5,\r\n              marginTop: 10\r\n            }}\r\n            onPress={() => {\r\n              this.addMessage(this.state.message)\r\n            }}>\r\n\r\n            <Icon\r\n              name=\"arrow-right\"\r\n              type=\"feather\"\r\n              color=\"white\"\r\n              onPress={() => {\r\n                this.addMessage(this.state.message)\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignSelf: \"flex-start\",\r\n    backgroundColor: '#ecf0f1',\r\n    padding: 12,\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n    paddingRight: 10,\r\n    marginTop: 5,\r\n    width: '61%'\r\n  },\r\n  container2: {\r\n    flexDirection: \"row\",\r\n    alignSelf: \"flex-start\",\r\n    backgroundColor: '#dadce0',\r\n    padding: 12,\r\n    borderRadius: 25,\r\n    marginLeft: 10,\r\n    paddingRight: 12,\r\n    marginTop: 5,\r\n    marginRight: 5,\r\n  },\r\n  container3: {\r\n    flexDirection: 'row',\r\n    //alignSelf:\"flex-start\",\r\n    //paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#1982fc',\r\n    padding: 12,\r\n    alignSelf: 'flex-end',\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n    paddingRight: 12,\r\n    marginTop: 5,\r\n    width: '61%'\r\n  },\r\n  container4: {\r\n    flexDirection: 'row',\r\n    //alignSelf:\"flex-start\",\r\n    //paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#1982fc',\r\n    padding: 12,\r\n    alignSelf: 'flex-end',\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n    paddingRight: 12,\r\n    marginTop: 5,\r\n    marginLeft: 10,\r\n  },\r\n  container5: {\r\n    flexDirection: 'row',\r\n    //alignSelf:\"flex-start\",\r\n    //paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#1982fc',\r\n    padding: 12,\r\n    alignSelf: 'flex-end',\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n    paddingRight: 10,\r\n    marginTop: 5\r\n  }\r\n})"]},"metadata":{},"sourceType":"script"}