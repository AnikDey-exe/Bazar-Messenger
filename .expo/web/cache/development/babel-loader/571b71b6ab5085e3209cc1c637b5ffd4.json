{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _firebase = _interopRequireDefault(require(\"firebase\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar ImagePicker = _interopRequireWildcard(require(\"expo-image-picker\"));\n\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\manas\\\\ChatApp\\\\screens\\\\SettingsScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar customFonts = {\n  \"Raleway\": require(\"../assets/Raleway-Regular.ttf\"),\n  \"Raleway-Bold\": require(\"../assets/Raleway-Bold.ttf\"),\n  \"Raleway-Thin\": require(\"../assets/Raleway-Thin.ttf\")\n};\n\nvar SettingsScreen = function (_React$Component) {\n  (0, _inherits2.default)(SettingsScreen, _React$Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SettingsScreen);\n    _this = _super.call(this);\n\n    _this.getUserDetails = function () {\n      _config.default.collection(\"Users\").where('emailID', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n\n          _this.setState({\n            firstName: data.firstName,\n            lastName: data.lastName,\n            contact: data.contact,\n            docId: doc.id,\n            userName: data.firstName + \" \" + data.lastName,\n            description: data.description\n          });\n        });\n      });\n    };\n\n    _this.updateProfilePicture = function (url) {\n      _config.default.collection(\"Users\").doc(_this.state.docId).update({\n        'profilePicture': url\n      });\n\n      _config.default.collection('Conversations').where('targetedUserId2', '==', _this.state.userId).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _config.default.collection('Conversations').doc(doc.id).update({\n            image: url\n          });\n        });\n      });\n\n      _this.setState({\n        profilePicture: url\n      });\n\n      return alert('Changes to your profile picture will occur once the application restarts.');\n    };\n\n    _this.fetchImage = function (imageName) {\n      var storageRef = _firebase.default.storage().ref().child(\"user_profiles/\" + imageName);\n\n      storageRef.getDownloadURL().then(function (url) {\n        _this.setState({\n          profilePicture: url\n        });\n\n        _config.default.collection(\"Users\").doc(_this.state.docId).update({\n          'profilePicture': url\n        });\n\n        _config.default.collection('Conversations').where('targetedUserId2', '==', _this.state.userId).get().then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            _config.default.collection('Conversations').doc(doc.id).update({\n              image: url\n            });\n          });\n        });\n      }).catch(function (error) {\n        _this.setState({\n          profilePicture: '#'\n        });\n      });\n    };\n\n    _this.selectPicture = function _callee() {\n      var _await$ImagePicker$la, cancelled, uri;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              _await$ImagePicker$la = _context.sent;\n              cancelled = _await$ImagePicker$la.cancelled;\n              uri = _await$ImagePicker$la.uri;\n\n              if (!cancelled) {\n                _this.uploadImage(uri, _this.state.userId);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImage = function _callee2(uri, imageName) {\n      var response, blob, ref;\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(fetch(uri));\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return _regenerator.default.awrap(response.blob());\n\n            case 5:\n              blob = _context2.sent;\n              ref = _firebase.default.storage().ref().child(\"user_profiles/\" + imageName);\n              return _context2.abrupt(\"return\", ref.put(blob).then(function (response) {\n                _this.fetchImage(imageName);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.updateUserProfileDetails = function () {\n      _config.default.collection(\"Users\").doc(_this.state.docId).update({\n        \"firstName\": _this.state.firstName,\n        \"lastName\": _this.state.lastName,\n        \"contact\": _this.state.contact,\n        \"description\": _this.state.description\n      });\n\n      alert(\"Your Profile Has Been Updated. Changes will occur once the app restarts.\");\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      contact: '',\n      userId: _firebase.default.auth().currentUser.email,\n      profilePicture: '',\n      docId: '',\n      description: '',\n      userName: '',\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(SettingsScreen, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regenerator.default.async(function _loadFontsAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regenerator.default.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n      this.fetchImage(this.state.userId);\n\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeElements.Header, {\n        leftComponent: _react.default.createElement(_reactNativeElements.Icon, {\n          name: \"arrow-left\",\n          type: \"feather\",\n          color: \"white\",\n          onPress: function onPress() {\n            return _this2.props.navigation.goBack();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 36\n          }\n        }),\n        centerComponent: {\n          text: \"Settings\",\n          style: {\n            color: 'white',\n            fontSize: 20,\n            fontWeight: 'bold',\n            height: 50,\n            paddingTop: 10\n          }\n        },\n        backgroundColor: \"#f75a4f\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNativeElements.Avatar, {\n        rounded: true,\n        source: {\n          uri: this.state.profilePicture\n        },\n        size: \"xlarge\",\n        onPress: function onPress() {\n          _this2.selectPicture();\n        },\n        containerStyle: {\n          marginTop: 0\n        },\n        showEditButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          width: '75%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: -3,\n          color: '#f75a4f',\n          fontWeight: 'bold',\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, \" First Name \"), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          borderBottomWidth: 1,\n          paddingBottom: 5,\n          borderBottomColor: '#f75a4f',\n          fontSize: 20,\n          marginTop: 5\n        },\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            firstName: text\n          });\n        },\n        value: this.state.firstName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: -3,\n          color: '#f75a4f',\n          fontWeight: 'bold',\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, \" Last Name \"), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          borderBottomWidth: 1,\n          paddingBottom: 5,\n          borderBottomColor: '#f75a4f',\n          fontSize: 20,\n          marginTop: 5\n        },\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            lastName: text\n          });\n        },\n        value: this.state.lastName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: -3,\n          color: '#f75a4f',\n          fontWeight: 'bold',\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }\n      }, \" Email \"), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          borderBottomWidth: 1,\n          paddingBottom: 5,\n          borderBottomColor: '#f75a4f',\n          fontSize: 20,\n          marginTop: 5\n        },\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            userId: text\n          });\n        },\n        value: this.state.userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: -3,\n          color: '#f75a4f',\n          fontWeight: 'bold',\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, \" Contact \"), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          borderBottomWidth: 1,\n          paddingBottom: 5,\n          borderBottomColor: '#f75a4f',\n          fontSize: 20,\n          marginTop: 5\n        },\n        placeholder: \"Phone Number\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        value: this.state.contact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: -3,\n          color: '#f75a4f',\n          fontWeight: 'bold',\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }\n      }, \" About Me \"), _react.default.createElement(_reactNative.TextInput, {\n        style: {\n          borderBottomWidth: 1,\n          paddingBottom: 5,\n          borderBottomColor: '#f75a4f',\n          fontSize: 20,\n          marginTop: 5\n        },\n        placeholder: \"Tell us about yourself!\",\n        placeholderTextColor: 'grey',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            description: text\n          });\n        },\n        value: this.state.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.updateUserProfileDetails();\n        },\n        style: {\n          marginTop: 20,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: '#f75a4f',\n          padding: 5,\n          borderRadius: 5,\n          height: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: 'white',\n          fontSize: 20,\n          fontWeight: '500'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 29\n        }\n      }, \" Update \")), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Login');\n\n          _firebase.default.auth().signOut();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 15,\n          color: 'black',\n          fontWeight: '600',\n          textDecorationLine: 'underline',\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, \" Sign Out \")))));\n    }\n  }]);\n  return SettingsScreen;\n}(_react.default.Component);\n\nexports.default = SettingsScreen;","map":{"version":3,"sources":["C:/Users/manas/ChatApp/screens/SettingsScreen.js"],"names":["customFonts","require","SettingsScreen","getUserDetails","db","collection","where","state","userId","get","then","snapshot","forEach","doc","data","setState","firstName","lastName","contact","docId","id","userName","description","updateProfilePicture","url","update","querySnapshot","image","profilePicture","alert","fetchImage","imageName","storageRef","firebase","storage","ref","child","getDownloadURL","catch","error","selectPicture","ImagePicker","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","cancelled","uri","uploadImage","fetch","response","blob","put","updateUserProfileDetails","auth","currentUser","email","fontsLoaded","Font","loadAsync","_loadFontsAsync","flex","props","navigation","goBack","text","style","color","fontSize","fontWeight","height","paddingTop","alignItems","justifyContent","marginTop","width","marginLeft","borderBottomWidth","paddingBottom","borderBottomColor","backgroundColor","padding","borderRadius","navigate","signOut","textAlign","textDecorationLine","React","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Text, FlatList, TouchableOpacity, Image, Alert, KeyboardAvoidingView } from 'react-native';\r\nimport { ListItem, SearchBar, Icon, Header } from 'react-native-elements';\r\nimport firebase from 'firebase';\r\nimport db from '../config'\r\nimport { TextInput } from 'react-native';\r\nimport { Avatar } from 'react-native-elements';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n    \"Raleway\": require(\"../assets/Raleway-Regular.ttf\"),\r\n    \"Raleway-Bold\": require(\"../assets/Raleway-Bold.ttf\"),\r\n    \"Raleway-Thin\": require(\"../assets/Raleway-Thin.ttf\"),\r\n};\r\n\r\nexport default class SettingsScreen extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            contact: '',\r\n            userId: firebase.auth().currentUser.email,\r\n            profilePicture: '',\r\n            docId: '',\r\n            description: '',\r\n            userName: '',\r\n            fontsLoaded: false\r\n        }\r\n    }\r\n\r\n    async _loadFontsAsync() {\r\n        await Font.loadAsync(customFonts);\r\n        this.setState({ fontsLoaded: true });\r\n      }\r\n\r\n    getUserDetails = () => {\r\n        db.collection(\"Users\").where('emailID', '==', this.state.userId).get()\r\n            .then(snapshot => {\r\n                snapshot.forEach(doc => {\r\n                    var data = doc.data()\r\n                    this.setState({\r\n                        firstName: data.firstName,\r\n                        lastName: data.lastName,\r\n                        contact: data.contact,\r\n                        docId: doc.id,\r\n                        userName: data.firstName + \" \" + data.lastName,\r\n                        description: data.description,\r\n                    })\r\n                });\r\n            })\r\n    }\r\n\r\n    updateProfilePicture = (url) => {\r\n        db.collection(\"Users\").doc(this.state.docId)\r\n            .update({\r\n                'profilePicture': url\r\n            })\r\n\r\n        db.collection('Conversations')\r\n            .where('targetedUserId2', '==', this.state.userId)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    db.collection('Conversations').doc(doc.id).update({\r\n                        image: url\r\n                    })\r\n                    // doc.update({\r\n                    //   lastMessage: this.state.message,\r\n                    //   lastMessageDate: firebase.firestore.Timestamp.now().toDate()\r\n                    // })\r\n                });\r\n            })\r\n\r\n        this.setState({\r\n            profilePicture: url\r\n        })\r\n\r\n        return alert('Changes to your profile picture will occur once the application restarts.')\r\n    }\r\n\r\n    fetchImage = (imageName) => {\r\n        var storageRef = firebase.storage().ref().child(\"user_profiles/\" + imageName);\r\n        storageRef.getDownloadURL()\r\n            .then((url) => {\r\n                this.setState({\r\n                    profilePicture: url\r\n                })\r\n                db.collection(\"Users\").doc(this.state.docId)\r\n                .update({\r\n                    'profilePicture': url\r\n                })\r\n                db.collection('Conversations')\r\n            .where('targetedUserId2', '==', this.state.userId)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    db.collection('Conversations').doc(doc.id).update({\r\n                        image: url\r\n                    })\r\n                    // doc.update({\r\n                    //   lastMessage: this.state.message,\r\n                    //   lastMessageDate: firebase.firestore.Timestamp.now().toDate()\r\n                    // })\r\n                });\r\n            })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    profilePicture: '#'\r\n                })\r\n            })\r\n    }\r\n\r\n    selectPicture = async () => {\r\n        const { cancelled, uri } = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n\r\n        if (!cancelled) {\r\n            this.uploadImage(uri, this.state.userId);\r\n        }\r\n    };\r\n\r\n    uploadImage = async (uri, imageName) => {\r\n        var response = await fetch(uri);\r\n        var blob = await response.blob();\r\n\r\n        var ref = firebase\r\n            .storage()\r\n            .ref()\r\n            .child(\"user_profiles/\" + imageName);\r\n\r\n        return ref.put(blob)\r\n            .then((response) => {\r\n                this.fetchImage(imageName);\r\n                //this.updateProfilePicture(uri);\r\n            });\r\n    };\r\n\r\n    updateUserProfileDetails = () => {\r\n        db.collection(\"Users\").doc(this.state.docId)\r\n            .update({\r\n                \"firstName\": this.state.firstName,\r\n                \"lastName\": this.state.lastName,\r\n                \"contact\": this.state.contact,\r\n                \"description\": this.state.description\r\n            })\r\n\r\n        alert(\"Your Profile Has Been Updated. Changes will occur once the app restarts.\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserDetails();\r\n        this.fetchImage(this.state.userId);\r\n        this._loadFontsAsync();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <Header\r\n                    leftComponent={<Icon name=\"arrow-left\" type='feather' color='white' onPress={() => this.props.navigation.goBack()} />}\r\n                    centerComponent={{ text: \"Settings\", style: { color: 'white', fontSize: 20, fontWeight: 'bold', height: 50, paddingTop: 10 } }}\r\n                    backgroundColor=\"#f75a4f\"\r\n                />\r\n\r\n\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', }}>\r\n                    <Avatar\r\n                        rounded\r\n                        source={{\r\n                            uri: this.state.profilePicture\r\n                        }}\r\n                        size=\"xlarge\"\r\n                        onPress={() => { this.selectPicture() }}\r\n                        containerStyle={{\r\n                            marginTop: 0\r\n                        }}\r\n                        showEditButton />\r\n                    <View style={{ width: '75%' }}>\r\n\r\n                        <Text style={{ marginLeft: -3, color: '#f75a4f', fontWeight: 'bold', marginTop: 10 }}> First Name </Text>\r\n                        <TextInput\r\n                            style={{ borderBottomWidth: 1, paddingBottom: 5, borderBottomColor: '#f75a4f', fontSize: 20, marginTop: 5 }}\r\n                            placeholder='Name'\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    firstName: text\r\n                                })\r\n                            }}\r\n                            value={this.state.firstName} />\r\n\r\n                        <Text style={{ marginLeft: -3, color: '#f75a4f', fontWeight: 'bold', marginTop: 10 }}> Last Name </Text>\r\n                        <TextInput\r\n                            style={{ borderBottomWidth: 1, paddingBottom: 5, borderBottomColor: '#f75a4f', fontSize: 20, marginTop: 5 }}\r\n                            placeholder='Name'\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    lastName: text\r\n                                })\r\n                            }}\r\n                            value={this.state.lastName} />\r\n\r\n                        <Text style={{ marginLeft: -3, color: '#f75a4f', fontWeight: 'bold', marginTop: 10 }}> Email </Text>\r\n                        <TextInput\r\n                            style={{ borderBottomWidth: 1, paddingBottom: 5, borderBottomColor: '#f75a4f', fontSize: 20, marginTop: 5 }}\r\n                            placeholder='Email'\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    userId: text\r\n                                })\r\n                            }}\r\n                            value={this.state.userId} />\r\n\r\n                        <Text style={{ marginLeft: -3, color: '#f75a4f', fontWeight: 'bold', marginTop: 10 }}> Contact </Text>\r\n                        <TextInput\r\n                            style={{ borderBottomWidth: 1, paddingBottom: 5, borderBottomColor: '#f75a4f', fontSize: 20, marginTop: 5 }}\r\n                            placeholder='Phone Number'\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    contact: text\r\n                                })\r\n                            }}\r\n                            value={this.state.contact} />\r\n\r\n                        <Text style={{ marginLeft: -3, color: '#f75a4f', fontWeight: 'bold', marginTop: 10 }}> About Me </Text>\r\n                        <TextInput\r\n                            style={{ borderBottomWidth: 1, paddingBottom: 5, borderBottomColor: '#f75a4f', fontSize: 20, marginTop: 5 }}\r\n                            placeholder='Tell us about yourself!'\r\n                            placeholderTextColor={'grey'}\r\n                            onChangeText={(text) => {\r\n                                this.setState({\r\n                                    description: text\r\n                                })\r\n                            }}\r\n                            value={this.state.description} />\r\n\r\n                        <TouchableOpacity\r\n                            onPress={() => { this.updateUserProfileDetails() }}\r\n                            style={{ marginTop: 20, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f75a4f', padding: 5, borderRadius: 5, height: 50 }}>\r\n                            <Text style={{ color: 'white', fontSize: 20, fontWeight: '500' }}> Update </Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                this.props.navigation.navigate('Login')\r\n                                firebase.auth().signOut()\r\n                            }}>\r\n\r\n\r\n                            <Text style={{ textAlign: 'center', fontSize: 15, color: 'black', fontWeight: '600', textDecorationLine: 'underline', marginTop: 20 }}\r\n                            > Sign Out </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"script"}