{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MediaTypeOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.MediaTypeOptions;\n  }\n});\nObject.defineProperty(exports, \"PermissionStatus\", {\n  enumerable: true,\n  get: function get() {\n    return _expoModulesCore.PermissionStatus;\n  }\n});\nObject.defineProperty(exports, \"UIImagePickerControllerQualityType\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.UIImagePickerControllerQualityType;\n  }\n});\nObject.defineProperty(exports, \"UIImagePickerPresentationStyle\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.UIImagePickerPresentationStyle;\n  }\n});\nObject.defineProperty(exports, \"VideoExportPreset\", {\n  enumerable: true,\n  get: function get() {\n    return _ImagePicker.VideoExportPreset;\n  }\n});\nexports.getCameraPermissionsAsync = getCameraPermissionsAsync;\nexports.getCameraRollPermissionsAsync = getCameraRollPermissionsAsync;\nexports.getMediaLibraryPermissionsAsync = getMediaLibraryPermissionsAsync;\nexports.getPendingResultAsync = getPendingResultAsync;\nexports.launchCameraAsync = launchCameraAsync;\nexports.launchImageLibraryAsync = launchImageLibraryAsync;\nexports.requestCameraPermissionsAsync = requestCameraPermissionsAsync;\nexports.requestCameraRollPermissionsAsync = requestCameraRollPermissionsAsync;\nexports.requestMediaLibraryPermissionsAsync = requestMediaLibraryPermissionsAsync;\nexports.useMediaLibraryPermissions = exports.useCameraPermissions = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _ExponentImagePicker = _interopRequireDefault(require(\"./ExponentImagePicker\"));\n\nvar _ImagePicker = require(\"./ImagePicker.types\");\n\nfunction validateOptions(options) {\n  var aspect = options.aspect,\n      quality = options.quality,\n      videoMaxDuration = options.videoMaxDuration;\n\n  if (aspect != null) {\n    var _aspect = (0, _slicedToArray2.default)(aspect, 2),\n        x = _aspect[0],\n        y = _aspect[1];\n\n    if (x <= 0 || y <= 0) {\n      throw new _expoModulesCore.CodedError('ERR_INVALID_ARGUMENT', \"Invalid aspect ratio values \" + x + \":\" + y + \". Provide positive numbers.\");\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new _expoModulesCore.CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'quality' value \" + quality + \". Provide a value between 0 and 1.\");\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new _expoModulesCore.CodedError('ERR_INVALID_ARGUMENT', \"Invalid 'videoMaxDuration' value \" + videoMaxDuration + \". Provide a non-negative number.\");\n  }\n\n  return options;\n}\n\nfunction getCameraPermissionsAsync() {\n  return _regenerator.default.async(function getCameraPermissionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", _ExponentImagePicker.default.getCameraPermissionsAsync());\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getCameraRollPermissionsAsync() {\n  return _regenerator.default.async(function getCameraRollPermissionsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.warn('ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()');\n          return _context2.abrupt(\"return\", getMediaLibraryPermissionsAsync());\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getMediaLibraryPermissionsAsync() {\n  var writeOnly,\n      _args3 = arguments;\n  return _regenerator.default.async(function getMediaLibraryPermissionsAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          writeOnly = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : false;\n          return _context3.abrupt(\"return\", _ExponentImagePicker.default.getMediaLibraryPermissionsAsync(writeOnly));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction requestCameraPermissionsAsync() {\n  return _regenerator.default.async(function requestCameraPermissionsAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", _ExponentImagePicker.default.requestCameraPermissionsAsync());\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction requestCameraRollPermissionsAsync() {\n  return _regenerator.default.async(function requestCameraRollPermissionsAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          console.warn('ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()');\n          return _context5.abrupt(\"return\", requestMediaLibraryPermissionsAsync());\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction requestMediaLibraryPermissionsAsync() {\n  var writeOnly,\n      imagePickerMethod,\n      _args6 = arguments;\n  return _regenerator.default.async(function requestMediaLibraryPermissionsAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          writeOnly = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : false;\n          imagePickerMethod = _ExponentImagePicker.default.requestMediaLibraryPermissionsAsync;\n          return _context6.abrupt(\"return\", imagePickerMethod(writeOnly));\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar useMediaLibraryPermissions = (0, _expoModulesCore.createPermissionHook)({\n  getMethod: function getMethod(options) {\n    return getMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  },\n  requestMethod: function requestMethod(options) {\n    return requestMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  }\n});\nexports.useMediaLibraryPermissions = useMediaLibraryPermissions;\nvar useCameraPermissions = (0, _expoModulesCore.createPermissionHook)({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync\n});\nexports.useCameraPermissions = useCameraPermissions;\n\nfunction getPendingResultAsync() {\n  return _regenerator.default.async(function getPendingResultAsync$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!_ExponentImagePicker.default.getPendingResultAsync) {\n            _context7.next = 2;\n            break;\n          }\n\n          return _context7.abrupt(\"return\", _ExponentImagePicker.default.getPendingResultAsync());\n\n        case 2:\n          return _context7.abrupt(\"return\", []);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction launchCameraAsync() {\n  var options,\n      _args8 = arguments;\n  return _regenerator.default.async(function launchCameraAsync$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          options = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n\n          if (_ExponentImagePicker.default.launchCameraAsync) {\n            _context8.next = 3;\n            break;\n          }\n\n          throw new _expoModulesCore.UnavailabilityError('ImagePicker', 'launchCameraAsync');\n\n        case 3:\n          _context8.next = 5;\n          return _regenerator.default.awrap(_ExponentImagePicker.default.launchCameraAsync(validateOptions(options)));\n\n        case 5:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 6:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction launchImageLibraryAsync(options) {\n  return _regenerator.default.async(function launchImageLibraryAsync$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          if (_ExponentImagePicker.default.launchImageLibraryAsync) {\n            _context9.next = 2;\n            break;\n          }\n\n          throw new _expoModulesCore.UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n\n        case 2:\n          _context9.next = 4;\n          return _regenerator.default.awrap(_ExponentImagePicker.default.launchImageLibraryAsync(options != null ? options : {}));\n\n        case 4:\n          return _context9.abrupt(\"return\", _context9.sent);\n\n        case 5:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/ImagePicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  MediaTypeOptions,\n  ImagePickerOptions,\n  VideoExportPreset,\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `getMediaLibraryPermissionsAsync()` instead.\n */\nexport async function getCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.getCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.getMediaLibraryPermissionsAsync()'\n  );\n  return getMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n/**\n * @deprecated Use `requestMediaLibraryPermissionsAsync()` instead.\n */\nexport async function requestCameraRollPermissionsAsync(): Promise<MediaLibraryPermissionResponse> {\n  console.warn(\n    'ImagePicker.requestCameraRollPermissionsAsync() is deprecated in favour of ImagePicker.requestMediaLibraryPermissionsAsync()'\n  );\n  return requestMediaLibraryPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will bloc\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n * **Animated GIFs support** If the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is set to `undefined` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG, on iOS — GIF).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return If the user cancelled the action, the method returns `{ cancelled: true }`. Otherwise,\n * this method returns information about the selected media item. When the chosen item is an image,\n * this method returns `{ cancelled: false, type: 'image', uri, width, height, exif, base64 }`;\n * when the item is a video, this method returns `{ cancelled: false, type: 'video', uri, width, height, duration }`.\n */\nexport async function launchImageLibraryAsync<T extends ImagePickerOptions>(\n  options?: T\n): Promise<ExpandImagePickerResult<T>> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport {\n  MediaTypeOptions,\n  ImagePickerOptions,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  VideoExportPreset,\n  CameraPermissionResponse,\n  CameraRollPermissionResponse,\n  MediaLibraryPermissionResponse,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerCancelledResult,\n  OpenFileBrowserOptions,\n  ExpandImagePickerResult,\n  UIImagePickerControllerQualityType,\n  UIImagePickerPresentationStyle,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}