{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Overlay = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = require(\"../config\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _excluded = [\"children\", \"isVisible\", \"containerStyle\", \"overlayStyle\", \"windowBackgroundColor\", \"overlayBackgroundColor\", \"onBackdropPress\", \"borderRadius\", \"width\", \"height\", \"fullScreen\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\manas\\\\ChatApp\\\\node_modules\\\\react-native-elements\\\\src\\\\overlay\\\\Overlay.js\";\n\nvar Overlay = function Overlay(props) {\n  var children = props.children,\n      isVisible = props.isVisible,\n      containerStyle = props.containerStyle,\n      overlayStyle = props.overlayStyle,\n      windowBackgroundColor = props.windowBackgroundColor,\n      overlayBackgroundColor = props.overlayBackgroundColor,\n      onBackdropPress = props.onBackdropPress,\n      borderRadius = props.borderRadius,\n      width = props.width,\n      height = props.height,\n      fullScreen = props.fullScreen,\n      rest = (0, _objectWithoutProperties2.default)(props, _excluded);\n  return _react.default.createElement(_reactNative.Modal, (0, _extends2.default)({\n    visible: isVisible,\n    onRequestClose: onBackdropPress,\n    transparent: true\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n    onPress: onBackdropPress,\n    testID: \"RNE__Overlay__backdrop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    testID: \"overlayContainer\",\n    style: _reactNative.StyleSheet.flatten([styles.backdrop, {\n      backgroundColor: windowBackgroundColor\n    }, containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    pointerEvents: \"box-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.flatten([styles.overlay, {\n      borderRadius: borderRadius,\n      backgroundColor: overlayBackgroundColor,\n      width: width,\n      height: height\n    }, fullScreen && styles.fullscreen, overlayStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexports.Overlay = Overlay;\nOverlay.propTypes = {\n  children: _propTypes.default.element.isRequired,\n  isVisible: _propTypes.default.bool.isRequired,\n  containerStyle: _config.ViewPropTypes.style,\n  overlayStyle: _config.ViewPropTypes.style,\n  windowBackgroundColor: _propTypes.default.string,\n  overlayBackgroundColor: _propTypes.default.string,\n  onBackdropPress: _propTypes.default.func,\n  borderRadius: _propTypes.default.number,\n  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  fullScreen: _propTypes.default.bool\n};\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: _helpers.ScreenWidth - 80,\n  height: _helpers.ScreenHeight - 180,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  }\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%'\n  },\n  overlay: (0, _extends2.default)({\n    borderRadius: 5,\n    padding: 10\n  }, _reactNative.Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0, 0, 0, .3)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowRadius: 4\n    }\n  }))\n});\n\nvar _default = (0, _config.withTheme)(Overlay, 'Overlay');\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/manas/ChatApp/node_modules/react-native-elements/src/overlay/Overlay.js"],"names":["Overlay","props","children","isVisible","containerStyle","overlayStyle","windowBackgroundColor","overlayBackgroundColor","onBackdropPress","borderRadius","width","height","fullScreen","rest","StyleSheet","flatten","styles","backdrop","backgroundColor","container","overlay","fullscreen","propTypes","PropTypes","element","isRequired","bool","ViewPropTypes","style","string","func","number","oneOfType","defaultProps","ScreenWidth","ScreenHeight","create","position","top","left","justifyContent","alignItems","flex","padding","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { ScreenHeight, ScreenWidth } from '../helpers';\n\nconst Overlay = props => {\n  const {\n    children,\n    isVisible,\n    containerStyle,\n    overlayStyle,\n    windowBackgroundColor,\n    overlayBackgroundColor,\n    onBackdropPress,\n    borderRadius,\n    width,\n    height,\n    fullScreen,\n    ...rest\n  } = props;\n\n  return (\n    <Modal\n      visible={isVisible}\n      onRequestClose={onBackdropPress}\n      transparent\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        onPress={onBackdropPress}\n        testID=\"RNE__Overlay__backdrop\"\n      >\n        <View\n          testID=\"overlayContainer\"\n          style={StyleSheet.flatten([\n            styles.backdrop,\n            { backgroundColor: windowBackgroundColor },\n            containerStyle,\n          ])}\n        />\n      </TouchableWithoutFeedback>\n\n      <View style={styles.container} pointerEvents=\"box-none\">\n        <View\n          style={StyleSheet.flatten([\n            styles.overlay,\n            {\n              borderRadius,\n              backgroundColor: overlayBackgroundColor,\n              width,\n              height,\n            },\n            fullScreen && styles.fullscreen,\n            overlayStyle,\n          ])}\n        >\n          {children}\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool,\n};\n\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: ScreenWidth - 80,\n  height: ScreenHeight - 180,\n  onBackdropPress: () => null,\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    borderRadius: 5,\n    padding: 10,\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"]},"metadata":{},"sourceType":"script"}