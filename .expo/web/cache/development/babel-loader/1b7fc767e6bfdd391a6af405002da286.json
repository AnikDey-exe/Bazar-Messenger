{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _TouchableNativeFeedbackSafe = _interopRequireDefault(require(\"./TouchableNativeFeedbackSafe\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _jsxFileName = \"/home/runner/work/react-native-action-sheet/react-native-action-sheet/src/ActionSheet/ActionGroup.tsx\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar BLACK_54PC_TRANSPARENT = '#0000008a';\nvar BLACK_87PC_TRANSPARENT = '#000000de';\nvar DESTRUCTIVE_COLOR = '#d32f2f';\n\nvar focusViewOnRender = function focusViewOnRender(ref) {\n  if (ref) {\n    var reactTag = (0, _reactNative.findNodeHandle)(ref);\n\n    if (reactTag) {\n      if (_reactNative.Platform.OS === 'android') {\n        _reactNative.UIManager.sendAccessibilityEvent(reactTag, _reactNative.UIManager.AccessibilityEventTypes.typeViewFocused);\n      } else {\n        _reactNative.AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nvar isIndexDestructive = function isIndexDestructive(index, destructiveIndex) {\n  if (Array.isArray(destructiveIndex)) {\n    return destructiveIndex.includes(index);\n  }\n\n  return index === destructiveIndex;\n};\n\nvar isIndexDisabled = function isIndexDisabled(index) {\n  var disabledButtonIndices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return disabledButtonIndices.includes(index);\n};\n\nvar ActionGroup = function (_React$Component) {\n  (0, _inherits2.default)(ActionGroup, _React$Component);\n\n  var _super = _createSuper(ActionGroup);\n\n  function ActionGroup() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ActionGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderRowSeparator = function (key) {\n      return React.createElement(_reactNative.View, {\n        key: \"separator-\" + key,\n        style: [styles.rowSeparator, _this.props.separatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._renderTitleContent = function () {\n      var _this$props = _this.props,\n          title = _this$props.title,\n          titleTextStyle = _this$props.titleTextStyle,\n          message = _this$props.message,\n          messageTextStyle = _this$props.messageTextStyle,\n          showSeparators = _this$props.showSeparators;\n\n      if (!title && !message) {\n        return null;\n      }\n\n      return React.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(_reactNative.View, {\n        style: [styles.titleContainer, {\n          paddingBottom: showSeparators ? 24 : 16\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, !!title && React.createElement(_reactNative.Text, {\n        style: [styles.title, titleTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, title), !!message && React.createElement(_reactNative.Text, {\n        style: [styles.message, messageTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, message)), !!showSeparators && _this._renderRowSeparator('title'));\n    };\n\n    _this._renderIconElement = function (iconSource, color) {\n      var tintIcons = _this.props.tintIcons;\n\n      if (!iconSource) {\n        return null;\n      }\n\n      if (typeof iconSource === 'number') {\n        var iconStyle = [styles.icon, {\n          tintColor: tintIcons ? color : undefined\n        }];\n        return React.createElement(_reactNative.Image, {\n          fadeDuration: 0,\n          source: iconSource,\n          resizeMode: \"contain\",\n          style: iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return React.createElement(_reactNative.View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 14\n          }\n        }, iconSource);\n      }\n    };\n\n    _this._renderOptionViews = function () {\n      var _this$props2 = _this.props,\n          options = _this$props2.options,\n          icons = _this$props2.icons,\n          destructiveButtonIndex = _this$props2.destructiveButtonIndex,\n          disabledButtonIndices = _this$props2.disabledButtonIndices,\n          _this$props2$destruct = _this$props2.destructiveColor,\n          destructiveColor = _this$props2$destruct === void 0 ? DESTRUCTIVE_COLOR : _this$props2$destruct,\n          onSelect = _this$props2.onSelect,\n          startIndex = _this$props2.startIndex,\n          length = _this$props2.length,\n          textStyle = _this$props2.textStyle,\n          tintColor = _this$props2.tintColor,\n          autoFocus = _this$props2.autoFocus,\n          showSeparators = _this$props2.showSeparators;\n      var optionViews = [];\n\n      var nativeFeedbackBackground = _TouchableNativeFeedbackSafe.default.Ripple('rgba(180, 180, 180, 1)', false);\n\n      var _loop = function _loop(_i) {\n        var defaultColor = tintColor ? tintColor : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n        var disabled = isIndexDisabled(_i, disabledButtonIndices);\n        var color = isIndexDestructive(_i, destructiveButtonIndex) ? destructiveColor : defaultColor;\n        var iconSource = icons != null ? icons[_i] : null;\n        optionViews.push(React.createElement(_TouchableNativeFeedbackSafe.default, {\n          ref: autoFocus && _i === 0 ? focusViewOnRender : undefined,\n          key: _i,\n          pressInDelay: 0,\n          background: nativeFeedbackBackground,\n          disabled: disabled,\n          onPress: function onPress() {\n            return onSelect(_i);\n          },\n          style: [styles.button, disabled && styles.disabledButton],\n          accessibilityRole: \"button\",\n          accessibilityLabel: options[_i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 9\n          }\n        }, _this._renderIconElement(iconSource, color), React.createElement(_reactNative.Text, {\n          style: [styles.text, textStyle, {\n            color: color\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, options[_i])));\n\n        if (showSeparators && _i < startIndex + length - 1) {\n          optionViews.push(_this._renderRowSeparator(_i));\n        }\n      };\n\n      for (var _i = startIndex; _i < startIndex + length; _i++) {\n        _loop(_i);\n      }\n\n      return optionViews;\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ActionGroup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(_reactNative.View, {\n        style: [styles.groupContainer, this.props.containerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, this._renderTitleContent(), React.createElement(_reactNative.ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, this._renderOptionViews()));\n    }\n  }]);\n  return ActionGroup;\n}(React.Component);\n\nexports.default = ActionGroup;\nActionGroup.defaultProps = {\n  title: null,\n  message: null,\n  showSeparators: false,\n  tintIcons: true,\n  textStyle: {}\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16\n  },\n  disabledButton: {\n    opacity: 0.5\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden'\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center'\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%'\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24\n  }\n});","map":{"version":3,"sources":["ActionGroup.tsx"],"names":["BLACK_54PC_TRANSPARENT","BLACK_87PC_TRANSPARENT","DESTRUCTIVE_COLOR","focusViewOnRender","reactTag","findNodeHandle","Platform","UIManager","AccessibilityInfo","isIndexDestructive","Array","destructiveIndex","index","isIndexDisabled","disabledButtonIndices","ActionGroup","React","Component","defaultProps","title","message","showSeparators","tintIcons","textStyle","styles","_renderRowSeparator","_renderTitleContent","titleTextStyle","messageTextStyle","paddingBottom","_renderIconElement","iconStyle","tintColor","_renderOptionViews","options","icons","destructiveButtonIndex","destructiveColor","onSelect","startIndex","length","autoFocus","optionViews","nativeFeedbackBackground","TouchableNativeFeedbackSafe","i","defaultColor","disabled","color","iconSource","StyleSheet","button","justifyContent","alignItems","flexDirection","height","paddingHorizontal","disabledButton","opacity","groupContainer","backgroundColor","overflow","icon","width","marginRight","marginTop","fontSize","textAlignVertical","rowSeparator","text","titleContainer","padding","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  findNodeHandle,\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  UIManager,\n  View,\n} from 'react-native';\n\nimport { ActionSheetOptions } from '../types';\nimport TouchableNativeFeedbackSafe from './TouchableNativeFeedbackSafe';\n\ntype Props = ActionSheetOptions & {\n  tintIcons: boolean | null;\n  onSelect: (i: number) => boolean;\n  startIndex: number;\n  length: number;\n};\n\nconst BLACK_54PC_TRANSPARENT = '#0000008a';\nconst BLACK_87PC_TRANSPARENT = '#000000de';\nconst DESTRUCTIVE_COLOR = '#d32f2f';\n\n/**\n * Can be used as a React ref for a component to auto-focus for accessibility on render.\n * @param ref The component to auto-focus\n */\nconst focusViewOnRender = (ref: React.Component | null) => {\n  if (ref) {\n    const reactTag = findNodeHandle(ref);\n    if (reactTag) {\n      if (Platform.OS === 'android') {\n        // @ts-ignore: sendAccessibilityEvent is missing from @types/react-native\n        UIManager.sendAccessibilityEvent(\n          reactTag,\n          // @ts-ignore: AccessibilityEventTypes is missing from @types/react-native\n          UIManager.AccessibilityEventTypes.typeViewFocused\n        );\n      } else {\n        AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nconst isIndexDestructive = (index: number, destructiveIndex?: number | number[]) => {\n  if (Array.isArray(destructiveIndex)) {\n    return destructiveIndex.includes(index);\n  }\n\n  return index === destructiveIndex;\n};\n\nconst isIndexDisabled = (index: number, disabledButtonIndices: number[] = []) => {\n  return disabledButtonIndices.includes(index);\n};\n\nexport default class ActionGroup extends React.Component<Props> {\n  static defaultProps = {\n    title: null,\n    message: null,\n    showSeparators: false,\n    tintIcons: true,\n    textStyle: {},\n  };\n\n  render() {\n    return (\n      <View style={[styles.groupContainer, this.props.containerStyle]}>\n        {this._renderTitleContent()}\n        <ScrollView>{this._renderOptionViews()}</ScrollView>\n      </View>\n    );\n  }\n\n  _renderRowSeparator = (key: string | number) => {\n    return (\n      <View key={`separator-${key}`} style={[styles.rowSeparator, this.props.separatorStyle]} />\n    );\n  };\n\n  _renderTitleContent = () => {\n    const { title, titleTextStyle, message, messageTextStyle, showSeparators } = this.props;\n\n    if (!title && !message) {\n      return null;\n    }\n\n    return (\n      <View>\n        <View style={[styles.titleContainer, { paddingBottom: showSeparators ? 24 : 16 }]}>\n          {!!title && <Text style={[styles.title, titleTextStyle]}>{title}</Text>}\n          {!!message && <Text style={[styles.message, messageTextStyle]}>{message}</Text>}\n        </View>\n        {!!showSeparators && this._renderRowSeparator('title')}\n      </View>\n    );\n  };\n\n  _renderIconElement = (iconSource: React.ReactNode | null, color: string) => {\n    const { tintIcons } = this.props;\n    if (!iconSource) {\n      return null;\n    }\n\n    if (typeof iconSource === 'number') {\n      const iconStyle = [styles.icon, { tintColor: tintIcons ? color : undefined }];\n      return <Image fadeDuration={0} source={iconSource} resizeMode=\"contain\" style={iconStyle} />;\n    } else {\n      return <View style={styles.icon}>{iconSource}</View>;\n    }\n  };\n\n  _renderOptionViews = () => {\n    const {\n      options,\n      icons,\n      destructiveButtonIndex,\n      disabledButtonIndices,\n      destructiveColor = DESTRUCTIVE_COLOR,\n      onSelect,\n      startIndex,\n      length,\n      textStyle,\n      tintColor,\n      autoFocus,\n      showSeparators,\n    } = this.props;\n    const optionViews: React.ReactNode[] = [];\n    const nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple(\n      'rgba(180, 180, 180, 1)',\n      false\n    );\n\n    for (let i = startIndex; i < startIndex + length; i++) {\n      const defaultColor = tintColor\n        ? tintColor\n        : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n      const disabled = isIndexDisabled(i, disabledButtonIndices);\n      const color = isIndexDestructive(i, destructiveButtonIndex) ? destructiveColor : defaultColor;\n      const iconSource = icons != null ? icons[i] : null;\n\n      optionViews.push(\n        <TouchableNativeFeedbackSafe\n          ref={autoFocus && i === 0 ? focusViewOnRender : undefined}\n          key={i}\n          pressInDelay={0}\n          background={nativeFeedbackBackground}\n          disabled={disabled}\n          onPress={() => onSelect(i)}\n          style={[styles.button, disabled && styles.disabledButton]}\n          accessibilityRole=\"button\"\n          accessibilityLabel={options[i]}>\n          {this._renderIconElement(iconSource, color)}\n          <Text style={[styles.text, textStyle, { color }]}>{options[i]}</Text>\n        </TouchableNativeFeedbackSafe>\n      );\n\n      if (showSeparators && i < startIndex + length - 1) {\n        optionViews.push(this._renderRowSeparator(i));\n      }\n    }\n\n    return optionViews;\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center',\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%',\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}